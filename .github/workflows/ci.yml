name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7
        ports: ["6379:6379"]
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/rails_test
      REDIS_URL: redis://localhost:6379/1
      OPENAI_API_KEY: "test"
      CLOUDINARY_URL: "cloudinary://key:secret@cloud/test"

    steps:
      - uses: actions/checkout@v4

      - name: Install system packages for native gems
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev build-essential

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.1'
          bundler-cache: true

      # Only set up Node if a yarn.lock exists (avoids cache error)
      - name: Set up Node (yarn projects only)
        if: hashFiles('yarn.lock') != ''
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      # Only install JS deps if yarn.lock exists
      - name: Install JS deps
        if: hashFiles('yarn.lock') != ''
        run: yarn install --frozen-lockfile

      - name: Prepare database
        run: bin/rails db:prepare

      # Optional for CI; allow it to fail without failing the job
      - name: Precompile assets (optional)
        continue-on-error: true
        run: |
          if [ -d app/assets ] || [ -d app/javascript ]; then bin/rails assets:precompile; fi

      - name: Run tests (RSpec or Minitest)
        run: |
          if [ -d spec ]; then bundle exec rspec; else bin/rails test; fi

      # Let lint and security checks report but not fail the build (for now)
      - name: RuboCop
        continue-on-error: true
        run: |
          if bundle show rubocop >/dev/null 2>&1; then bundle exec rubocop; else echo "RuboCop not installed"; fi

      - name: Brakeman
        continue-on-error: true
        run: |
          if bundle show brakeman >/dev/null 2>&1; then bundle exec brakeman -q -w2; else echo "Brakeman not installed"; fi

      - name: Bundler Audit
        continue-on-error: true
        run: |
          if bundle show bundler-audit >/dev/null 2>&1; then bundle exec bundler-audit update && bundle exec bundler-audit check; else echo "bundler-audit not installed"; fi
